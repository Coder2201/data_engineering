# -*- coding: utf-8 -*-
"""HWK5_Trishita.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oo622GXhSrpFgB2j6JPUehv0nXpgvruE
"""

# Import required libraries
#pip install polygon-api-client~=0.1.0
import datetime
from random import randint
import time
from polygon import RESTClient
from sqlalchemy import create_engine 
from sqlalchemy import text
import pickle
import pandas as pd
from math import sqrt
from math import isnan
import matplotlib.pyplot as plt
from numpy import mean
from numpy import std
from math import floor
import numpy as np

# The following 10 blocks of code define the classes for storing the the return data, for each
# currency pair.
    
# Installing the created package hosted on PyPI
#!pip install polygon-data-generator~=0.1.12

# Importing the created packages from the library 
from polygon_data_generator import data_writer
from polygon_data_generator import portfolio
from polygon_data_generator import currency_volatility_thresholds
from pycaret.regression import *

# Defining a dictioniary with the set of currency pairs we will be pulling data for
currency_pairs = [["USD","CAD",[],portfolio("USD","CAD")],
                   ["USD","JPY",[],portfolio("USD","JPY")],
                   ["USD","MXN",[],portfolio("USD","MXN")],
                   ["EUR","USD",[],portfolio("EUR","USD")],
                   ["AUD","USD",[],portfolio("AUD","USD")],
                   ["USD","CZK",[],portfolio("USD","CZK")],
                   ["USD","PLN",[],portfolio("USD","PLN")],
                  ["USD","INR",[],portfolio("USD","INR")]]

# Importing function to randomly assign a currency pair for long and short positions
import random

# Randomly assigning 5 currency pairs for a long trade and the rest for a short trade
long_pairs = random.sample(currency_pairs,4)
short_pairs = [x for x in currency_pairs if x not in long_pairs]

# Assigning the position for each currency pair
for pair in long_pairs:
    pair[3].position = "LONG"
for pair in short_pairs:
    pair[3].position = "SHORT"
currency_pairs = long_pairs + short_pairs

# Print the currency pairs and their positions
for i in currency_pairs:
    print(i[0],i[1],i[3].position)

# Run the main data collection loop
# Making a class
data_writer = data_writer(currency_pairs)

# Calling the function
data_writer.acquire_data_and_write() 


